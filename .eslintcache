[{"E:\\web\\FontEnd\\todo-example\\src\\index.js":"1","E:\\web\\FontEnd\\todo-example\\src\\App.js":"2","E:\\web\\FontEnd\\todo-example\\src\\reportWebVitals.js":"3","E:\\web\\FontEnd\\todo-example\\src\\sevices\\http-common.js":"4","E:\\web\\FontEnd\\todo-example\\src\\sevices\\crud.js":"5","E:\\web\\FontEnd\\todo-example\\src\\trangchu\\index.js":"6","E:\\web\\FontEnd\\todo-example\\src\\customer\\index.js":"7","E:\\web\\FontEnd\\todo-example\\src\\customer\\FormInput.js":"8","E:\\web\\FontEnd\\todo-example\\src\\ProductUpdate\\index.js":"9","E:\\web\\FontEnd\\todo-example\\src\\Product\\index.js":"10","E:\\web\\FontEnd\\todo-example\\src\\product\\index.js":"11","E:\\web\\FontEnd\\todo-example\\src\\product\\tableProduct.js":"12","E:\\web\\FontEnd\\todo-example\\src\\product\\FormInput.js":"13","E:\\web\\FontEnd\\todo-example\\src\\productUpdate\\index.js":"14","E:\\web\\FontEnd\\todo-example\\src\\customer\\tableCustomer.js":"15","E:\\web\\FontEnd\\todo-example\\src\\categories\\index.js":"16","E:\\web\\FontEnd\\todo-example\\src\\categories\\FormInput.js":"17","E:\\web\\FontEnd\\todo-example\\src\\categories\\tableCategories.js":"18","E:\\web\\FontEnd\\todo-example\\src\\customerUpdate\\index.js":"19","E:\\web\\FontEnd\\todo-example\\src\\categoriesUpdate\\index.js":"20","E:\\web\\FontEnd\\todo-example\\src\\employeesUpdate\\index.js":"21","E:\\web\\FontEnd\\todo-example\\src\\employees\\index.js":"22","E:\\web\\FontEnd\\todo-example\\src\\employees\\FormInput.js":"23","E:\\web\\FontEnd\\todo-example\\src\\employees\\tableEmployees.js":"24","E:\\web\\FontEnd\\todo-example\\src\\orderDetailUpdate\\index.js":"25","E:\\web\\FontEnd\\todo-example\\src\\orderDetail\\index.js":"26","E:\\web\\FontEnd\\todo-example\\src\\orderDetail\\tableOrderDetail.js":"27","E:\\web\\FontEnd\\todo-example\\src\\orderDetail\\FormInput.js":"28","E:\\web\\FontEnd\\todo-example\\src\\order\\index.js":"29","E:\\web\\FontEnd\\todo-example\\src\\order\\FormInput.js":"30","E:\\web\\FontEnd\\todo-example\\src\\orderUpdate\\index.js":"31","E:\\web\\FontEnd\\todo-example\\src\\order\\tableOrder.js":"32","E:\\web\\FontEnd\\todo-example\\src\\shipperUpdate\\index.js":"33","E:\\web\\FontEnd\\todo-example\\src\\shipper\\index.js":"34","E:\\web\\FontEnd\\todo-example\\src\\shipper\\tableShipper.js":"35","E:\\web\\FontEnd\\todo-example\\src\\shipper\\FormInput.js":"36","E:\\web\\FontEnd\\todo-example\\src\\supplierUpdate\\index.js":"37","E:\\web\\FontEnd\\todo-example\\src\\supplier\\index.js":"38","E:\\web\\FontEnd\\todo-example\\src\\supplier\\FormInput.js":"39","E:\\web\\FontEnd\\todo-example\\src\\supplier\\tableSupplier.js":"40"},{"size":546,"mtime":1610467367745,"results":"41","hashOfConfig":"42"},{"size":2528,"mtime":1611657315350,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":508,"mtime":1610290516721,"results":"45","hashOfConfig":"42"},{"size":6026,"mtime":1611656826060,"results":"46","hashOfConfig":"42"},{"size":4376,"mtime":1612417669589,"results":"47","hashOfConfig":"42"},{"size":1014,"mtime":1611680568184,"results":"48","hashOfConfig":"42"},{"size":3275,"mtime":1611587640746,"results":"49","hashOfConfig":"42"},{"size":4188,"mtime":1611564203397,"results":"50","hashOfConfig":"42"},{"size":1126,"mtime":1611563009249,"results":"51","hashOfConfig":"42"},{"size":1148,"mtime":1611680548182,"results":"52","hashOfConfig":"42"},{"size":4043,"mtime":1612417215253,"results":"53","hashOfConfig":"42"},{"size":3334,"mtime":1611676580720,"results":"54","hashOfConfig":"42"},{"size":4590,"mtime":1612419154306,"results":"55","hashOfConfig":"42"},{"size":4219,"mtime":1612417215252,"results":"56","hashOfConfig":"42"},{"size":1203,"mtime":1611680421440,"results":"57","hashOfConfig":"42"},{"size":1967,"mtime":1611680635936,"results":"58","hashOfConfig":"42"},{"size":3731,"mtime":1612417215253,"results":"59","hashOfConfig":"42"},{"size":6652,"mtime":1612419268708,"results":"60","hashOfConfig":"42"},{"size":4544,"mtime":1612419320216,"results":"61","hashOfConfig":"42"},{"size":5943,"mtime":1612419295270,"results":"62","hashOfConfig":"42"},{"size":1039,"mtime":1611680561658,"results":"63","hashOfConfig":"42"},{"size":2852,"mtime":1611591368138,"results":"64","hashOfConfig":"42"},{"size":4123,"mtime":1612417215253,"results":"65","hashOfConfig":"42"},{"size":4982,"mtime":1612419222011,"results":"66","hashOfConfig":"42"},{"size":1245,"mtime":1611680931867,"results":"67","hashOfConfig":"42"},{"size":3933,"mtime":1612417215252,"results":"68","hashOfConfig":"42"},{"size":3321,"mtime":1611675720307,"results":"69","hashOfConfig":"42"},{"size":961,"mtime":1611680922647,"results":"70","hashOfConfig":"42"},{"size":4228,"mtime":1611680774302,"results":"71","hashOfConfig":"42"},{"size":5460,"mtime":1612419197289,"results":"72","hashOfConfig":"42"},{"size":3980,"mtime":1612417215253,"results":"73","hashOfConfig":"42"},{"size":4503,"mtime":1612419118594,"results":"74","hashOfConfig":"42"},{"size":1194,"mtime":1611680543623,"results":"75","hashOfConfig":"42"},{"size":3810,"mtime":1612417215491,"results":"76","hashOfConfig":"42"},{"size":1935,"mtime":1611656171136,"results":"77","hashOfConfig":"42"},{"size":7046,"mtime":1612419049847,"results":"78","hashOfConfig":"42"},{"size":1202,"mtime":1611680534257,"results":"79","hashOfConfig":"42"},{"size":3114,"mtime":1611657472293,"results":"80","hashOfConfig":"42"},{"size":4274,"mtime":1612417215253,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"davfko",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"84"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"84"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"84"},"E:\\web\\FontEnd\\todo-example\\src\\index.js",[],["192","193"],"E:\\web\\FontEnd\\todo-example\\src\\App.js",["194"],"import { Route, Router, Switch } from 'react-router-dom';\nimport './App.css';\nimport ProductUpdate from \"./productUpdate\";\nimport CategoriesUpdate from \"./categoriesUpdate\";\nimport CustomerUpdate from \"./customerUpdate\";\nimport EmployeesUpdate from \"./employeesUpdate\";\nimport OrderDetailUpdate from \"./orderDetailUpdate\";\nimport ShipperUpdate from \"./shipperUpdate\";\nimport OrderUpdate from \"./orderUpdate\";\nimport SupplierUpdate from \"./supplierUpdate\";\nimport Home from \"./trangchu\";\nimport Product from \"./product\";\nimport Customer from \"./customer\";\nimport Categories from \"./categories\";\nimport Employees from \"./employees\";\nimport OrderDetail from \"./orderDetail\";\nimport Order from \"./order\";\nimport Shipper from \"./shipper\";\nimport Supplier from \"./supplier\";\n\n  function App(){\n    return (\n     \n      <>\n        {/* <Example /> */}\n        <Switch>\n        <Route path=\"/supplier/update/:id\" >\n            <SupplierUpdate />\n          </Route>\n          <Route path=\"/supplier\">\n            <Supplier />\n          </Route>\n        <Route path=\"/shipper/update/:id\" >\n            <ShipperUpdate />\n          </Route>\n          <Route path=\"/shipper\">\n            <Shipper />\n          </Route>\n        <Route path=\"/order/update/:id\" >\n            <OrderUpdate />\n          </Route>\n          <Route path=\"/order\">\n            <Order />\n          </Route>\n        <Route path=\"/orderDetail/update/:id\" >\n            <OrderDetailUpdate />\n          </Route>\n          <Route path=\"/orderDetail\">\n            <OrderDetail />\n          </Route>\n        <Route path=\"/employees/update/:id\" >\n            <EmployeesUpdate />\n          </Route>\n          <Route path=\"/employees\">\n            <Employees />\n          </Route>\n        <Route path=\"/categories/update/:id\" >\n            <CategoriesUpdate />\n          </Route>\n          <Route path=\"/categories\">\n            <Categories />\n          </Route>\n        <Route path=\"/customer/update/:id\" >\n            <CustomerUpdate />\n          </Route>\n          <Route path=\"/customer\">\n            <Customer />\n          </Route>\n          <Route path=\"/product/update/:id\" >\n            <ProductUpdate />\n          </Route>\n          <Route path=\"/product\">\n            <Product />\n          </Route>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n  \n  // <ul>\n  //   {listCustomer.map((item, index) => (\n  //     <li key={item.ProductID}>{item.ProductName}</li>\n  //   ))}\n  // </ul>\nexport default App;\n","E:\\web\\FontEnd\\todo-example\\src\\reportWebVitals.js",[],"E:\\web\\FontEnd\\todo-example\\src\\sevices\\http-common.js",[],"E:\\web\\FontEnd\\todo-example\\src\\sevices\\crud.js",["195"],"import HttpRequest from \"./http-common\";\r\n\r\nconst getAll = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/Products/all\");\r\n};\r\n\r\nconst create = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/Products\", data);\r\n};\r\n\r\nconst deleteOne = (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/Products/${id}`);\r\n};\r\n\r\nconst updateOne = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/Products/${id}`, data);\r\n};\r\n\r\nconst getOne = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/products/get/${id}`);\r\n};\r\n\r\n//Customer=================================================================\r\n\r\nconst getAllCustomer = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/customer/all\");\r\n};\r\n\r\nconst createCustomer = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/customer\", data);\r\n};\r\n\r\nconst deleteOneCustomer = (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/customer/${id}`);\r\n};\r\n\r\nconst updateOneCustomer = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/customer/${id}`, data);\r\n};\r\n\r\nconst getOneCustomer = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/customer/get/${id}`);\r\n};\r\n\r\n//Categori===========================================================\r\n\r\nconst getAllCategories = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/Categories/all\");\r\n};\r\n\r\nconst createCategories = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/Categories\", data);\r\n};\r\n\r\nconst deleteOneCategories= (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/Categories/${id}`);\r\n};\r\n\r\nconst updateOneCategories = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/Categories/${id}`, data);\r\n};\r\n\r\nconst getOneCategories = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/Categories/get/${id}`);\r\n};\r\n\r\n//Employess===========================================================\r\n\r\nconst getAllEmployees = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/Employees/all\");\r\n};\r\n\r\nconst createEmployees = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/Employees\", data);\r\n};\r\n\r\nconst deleteOneEmployees= (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/Employees/${id}`);\r\n};\r\n\r\nconst updateOneEmployees = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/Employees/${id}`, data);\r\n};\r\n\r\nconst getOneEmployees = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/Employees/get/${id}`);\r\n};\r\n\r\n//OrderDetail===========================================================\r\n\r\nconst getAllOrderDetail = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/OrderDetails/all\");\r\n};\r\n\r\nconst createOrderDetail = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/OrderDetails\", data);\r\n};\r\n\r\nconst deleteOneOrderDetail= (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/OrderDetails/${id}`);\r\n};\r\n\r\nconst updateOneOrderDetail = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/OrderDetails/${id}`, data);\r\n};\r\n\r\nconst getOneOrderDetail = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/OrderDetails/get/${id}`);\r\n};\r\n\r\n//Order===========================================================\r\n\r\nconst getAllOrder = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/Orders/all\");\r\n};\r\n\r\nconst createOrder = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/Orders\", data);\r\n};\r\n\r\nconst deleteOneOrder= (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/Orders/${id}`);\r\n};\r\n\r\nconst updateOneOrder = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/Orders/${id}`, data);\r\n};\r\n\r\nconst getOneOrder = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/Orders/get/${id}`);\r\n};\r\n\r\n//Shipper===========================================================\r\n\r\nconst getAllShipper = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/Shippers/all\");\r\n};\r\n\r\nconst createShipper = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/Shippers\", data);\r\n};\r\n\r\nconst deleteOneShipper = (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/Shippers/${id}`);\r\n};\r\n\r\nconst updateOneShipper = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/Shippers/${id}`, data);\r\n};\r\n\r\nconst getOneShipper = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/Shippers/get/${id}`);\r\n};\r\n\r\n//Supplier===========================================================\r\n\r\nconst getAllSupplier = async () => {\r\n    return await HttpRequest.get(\"http://localhost:5000/Suppliers/all\");\r\n};\r\n\r\nconst createSupplier = (data) => {\r\n    return HttpRequest.post(\"http://localhost:5000/Suppliers\", data);\r\n};\r\n\r\nconst deleteOneSupplier = (id) => {\r\n    return HttpRequest.delete(`http://localhost:5000/Suppliers/${id}`);\r\n};\r\n\r\nconst updateOneSupplier = (id, data) => {\r\n    return HttpRequest.put(`http://localhost:5000/Suppliers/${id}`, data);\r\n};\r\n\r\nconst getOneSupplier = async (id) => {\r\n    return await HttpRequest.get(`http://localhost:5000/Suppliers/get/${id}`);\r\n};\r\nexport default {getAll, create, deleteOne, updateOne, getOne,\r\n     createCustomer, deleteOneCustomer, updateOneCustomer,getOneCustomer, getAllCustomer,\r\n     getAllCategories,  createCategories, deleteOneCategories, updateOneCategories, getOneCategories,\r\n     getAllEmployees, createEmployees, deleteOneEmployees, updateOneEmployees, getOneEmployees,\r\n     getAllOrderDetail, createOrderDetail, deleteOneOrderDetail, updateOneOrderDetail, getOneOrderDetail,\r\n     getAllOrder, createOrder, deleteOneOrder, updateOneOrder, getOneOrder,\r\n     getAllShipper, createShipper, deleteOneShipper, updateOneShipper, getOneShipper,\r\n     getAllSupplier, createSupplier, deleteOneSupplier, updateOneSupplier, getOneSupplier,\r\n    };\r\n\r\n","E:\\web\\FontEnd\\todo-example\\src\\trangchu\\index.js",["196"],"import CRUD from \"../sevices/crud\";\r\nimport React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Carousel,\r\n    CarouselItem,\r\n    CarouselControl,\r\n    CarouselIndicators,\r\n    CarouselCaption\r\n} from 'reactstrap';\r\n\r\nconst items = [\r\n    {\r\n        src: 'https://upload.wikimedia.org/wikipedia/commons/2/29/%C4%90%E1%BA%A1i_h%E1%BB%8Dc_Ki%E1%BA%BFn_tr%C3%BAc_%C4%90%C3%A0_N%E1%BA%B5ng.jpeg',\r\n        // altText: 'Slide 1',\r\n        // caption: 'Slide 1'\r\n    },\r\n    {\r\n        src: 'https://scontent.xx.fbcdn.net/v/t1.15752-9/108109168_636678380280045_1729231566561415854_n.jpg?_nc_cat=111&ccb=2&_nc_sid=f79d6e&_nc_ohc=R4WUarQN8FMAX8tgb5p&_nc_ad=z-m&_nc_cid=0&_nc_ht=scontent.xx&oh=14a1265ca53dc5086bfe68f4a3c62d68&oe=6040BB71',\r\n        // altText: 'Slide 2',\r\n        // caption: 'Slide 2'\r\n    },\r\n    {\r\n        src: 'https://scontent.fdad3-1.fna.fbcdn.net/v/t1.15752-9/138743891_1444060695938833_1026078891187492388_n.jpg?_nc_cat=103&ccb=2&_nc_sid=ae9488&_nc_ohc=GlW6USV2keAAX-2nBth&_nc_ht=scontent.fdad3-1.fna&oh=b50f8142aa8fc729dba95ab2a30ddc7e&oe=60419CE8',\r\n        // altText: 'Slide 3',\r\n        // caption: 'Slide 3'\r\n    }\r\n];\r\nfunction Home() {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [animating, setAnimating] = useState(false);\r\n\r\n    const next = () => {\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n        setActiveIndex(nextIndex);\r\n    }\r\n\r\n    const previous = () => {\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n        setActiveIndex(nextIndex);\r\n    }\r\n\r\n    const goToIndex = (newIndex) => {\r\n        if (animating) return;\r\n        setActiveIndex(newIndex);\r\n    }\r\n\r\n    const slides = items.map((item) => {\r\n        return (\r\n            <CarouselItem\r\n                onExiting={() => setAnimating(true)}\r\n                onExited={() => setAnimating(false)}\r\n                key={item.src}\r\n            >\r\n                <img src={item.src} className=\"slide-image\" alt={item.altText} />\r\n                <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n            </CarouselItem>\r\n        );\r\n    });\r\n    return (\r\n        <>\r\n            <div className=\"container-app-app\">\r\n                <nav>\r\n                    <div className=\"logo\">\r\n                        TLH\r\n                    </div>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"content\">\r\n                    <Carousel\r\n                        activeIndex={activeIndex}\r\n                        next={next}\r\n                        previous={previous}\r\n                    >\r\n                        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n                        {slides}\r\n                        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n                        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n                    </Carousel>\r\n                </div>\r\n\r\n\r\n                <div className=\"footer\">\r\n                    <p>© 2021 Bản quyền thuộc Team LTH. No copy</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\customer\\index.js",["197","198"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableCustomer from \"./tableCustomer\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listCustomer, setlistCustomer] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n\r\n    const RetrieveAllCustomers = () => {\r\n        CRUD.getAllCustomer().then(res => {\r\n            setlistCustomer(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      RetrieveAllCustomers();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <TableCustomer items={listCustomer} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem} RetrieveAllCustomers={RetrieveAllCustomers}/>\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\customer\\FormInput.js",["199"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item, RetrieveAllCustomers }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    let history = useHistory();\r\n    const [postData, setpostData] = React.useState({\r\n        CustomerName: \"\",\r\n        ContactName: \"\",\r\n        Address: \"\",\r\n        City: \"\",\r\n        PostalCode: \"\",\r\n        Country: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (item)\r\n            setpostData(item);\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n        const {\r\n            CustomerName,\r\n            ContactName,\r\n            Address,\r\n            City,\r\n            PostalCode,\r\n            Country,\r\n        } = postData;\r\n            CRUD.createCustomer({customer_name: CustomerName,contact_name: ContactName, address: Address\r\n                , city: City, postal_code: PostalCode, country: Country}).then((res) => {\r\n                // alert(res.data.message);\r\n                //window.location.reload();\r\n                RetrieveAllCustomers();\r\n                const check = res.data.message === \"Insert successfully\";\r\n                onSubmitSuccess(check);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                alert(err.response.data.message || \"Unknown Message\");\r\n            });\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"13%\"}} type=\"text\" name=\"CustomerName\" value={postData.CustomerName} onChange={handleChangeData} placeholder=\"CustomerName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"13%\"}} type=\"text\" name=\"ContactName\" value={postData.ContactName} onChange={handleChangeData} placeholder=\"ContactName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"13%\"}} type=\"text\" name=\"Address\" value={postData.Address} onChange={handleChangeData} placeholder=\"Address\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"13%\"}} type=\"text\" name=\"City\" value={postData.City} onChange={handleChangeData} placeholder=\"City\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"13%\"}} type=\"text\" name=\"PostalCode\" value={postData.PostalCode} onChange={handleChangeData} placeholder=\"PostalCode\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"13%\"}} type=\"text\" name=\"Country\" value={postData.Country} onChange={handleChangeData} placeholder=\"Country\"></input>\r\n            <button style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"22%\", backgroundColor: \"rgb(230, 120, 116)\"}} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\ProductUpdate\\index.js",["200","201","202","203","204","205","206","207","208"],"E:\\web\\FontEnd\\todo-example\\src\\Product\\index.js",["209","210","211","212","213","214","215","216","217"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport \"./styleProductUpdate.css\";\r\n\r\n\r\nfunction Product() {\r\n  const { id } = useParams();\r\n  // const location = useLocation();\r\n  // const item = (location.state.item)\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [postData, setpostData] = React.useState(null);\r\n\r\n  function handleChangeData(e) {\r\n    setpostData({ ...postData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    CRUD.updateOne(postData.ProductID, postData).then((res) => {\r\n      history.goBack();\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    CRUD.getOne(id)\r\n      .then(res => {\r\n        setpostData(res.data.data); setLoading(false)\r\n      })\r\n      .catch(err => {\r\n        console.log(err); setLoading(false)\r\n      })\r\n  }, [id])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <nav>\r\n          <div className=\"logo\">\r\n            Long Lz\r\n         </div>\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">Customers</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Categories</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Employees</a>\r\n            </li>\r\n            <li><a href=\"#\">OrderDetails</a>\r\n\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Orders</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Products</a>\r\n            </li>\r\n            <li><a href=\"#\">Shippers</a>\r\n\r\n            </li>\r\n            <li><a href=\"#\">Suppliers</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"form\">\r\n          <h1>Products</h1>\r\n          {!loading ?\r\n            postData ? \r\n          <>\r\n          <div className=\"txtb\">\r\n              <label for=\"\">ProductName:</label>\r\n              <input type=\"text\" name=\"ProductName\" value={postData.ProductName} onChange={handleChangeData}  placeholder=\"ProductName\"></input>\r\n          </div>\r\n          <>\r\n           <div className=\"txtb\">\r\n             <label for=\"\">SupplierID:</label>\r\n             <input type=\"text\" name=\"SupplierID\" value={postData.SupplierID} onChange={handleChangeData} placeholder=\"SupplierID\"></input>\r\n           </div>\r\n            <>\r\n          <div className=\"txtb\">\r\n          <label for=\"\">CategoryID:</label>\r\n          <input type=\"text\" name=\"CategoryID\" value={postData.CategoryID} onChange={handleChangeData} placeholder=\"CategoryID\"></input>\r\n          </div>\r\n            <>\r\n          <div className=\"txtb\">\r\n            <label for=\"\">Unit:</label>\r\n          <input type=\"text\" name=\"Unit\" value={postData.Unit} onChange={handleChangeData}  placeholder=\"Unit\"></input>\r\n          </div>\r\n            <>\r\n          <div className=\"txtb\">\r\n            <label for=\"\">Price:</label>\r\n          <input type=\"text\" name=\"Price\" value={postData.Price} onChange={handleChangeData} placeholder=\"Price\"></input>\r\n          </div>\r\n            <>\r\n          <button className=\"btn btn-primary\" name=\"btnSubmit\" value=\"Submit\" onClick={handleSubmit}><i class=\"fas fa-tools\"></i>Submit</button>\r\n          </>\r\n          </>\r\n          </>\r\n          </>\r\n          </>\r\n          </>\r\n              : <div>khong co data</div>\r\n            : <div>Loading ...</div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// <ul>\r\n//   {listCustomer.map((item, index) => (\r\n//     <li key={item.ProductID}>{item.ProductName}</li>\r\n//   ))}\r\n// </ul>\r\nexport default Product;\r\n",["218","219"],"E:\\web\\FontEnd\\todo-example\\src\\product\\index.js",["220","221"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableProduct from \"./tableProduct\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listProduct, setlistProduct] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n   \r\n    const RetrieveAllProducts = () => {\r\n        CRUD.getAll().then(res => {\r\n            setlistProduct(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        RetrieveAllProducts();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       <TableProduct items={listProduct} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem}/>\r\n        \r\n            \r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess} /> */}\r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess}  item={currentItem > -1 ? listCustomer[currentItem] : null}/> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\product\\tableProduct.js",["222","223","224","225"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableProduct({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem, onSubmitSuccess }) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [postData, setpostData] = React.useState(null);\r\n\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOne(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/product/update/${id}`);\r\n    }\r\n\r\n    function handleOnXemHangTon() {\r\n        CRUD.getOne().then((res) => {\r\n            setpostData(res.data.data);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                    <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border: \"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>ProductID</td>\r\n                        <td>ProductName</td>\r\n                        <td>SupplierID</td>\r\n                        <td>CategoryID</td>\r\n                        <td>Unit</td>\r\n                        <td>Price</td>\r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td>{item.ProductID}</td>\r\n                            <td>{item.ProductName}</td>\r\n                            <td>{item.SupplierID}</td>\r\n                            <td>{item.CategoryID}</td>\r\n                            <td>{item.Unit}</td>\r\n                            <td>{item.Price}</td>\r\n                            <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.ProductID)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                            <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.ProductID)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n\r\n                        </tr>\r\n\r\n                    ))}\r\n\r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} />\r\n                \r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableProduct;\r\n","E:\\web\\FontEnd\\todo-example\\src\\product\\FormInput.js",["226"],"import React, { useEffect, useState } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    let history = useHistory();\r\n    const [loading, setLoading] = useState(true)\r\n    const [postData, setpostData] = React.useState({\r\n        ProductName: \"\",\r\n        SupplierID: \"\",\r\n        CategoryID: \"\",\r\n        Unit: \"\",\r\n        Price: \"\",\r\n    })\r\n    const [categories, setCategories] = useState(null) \r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        if (item)\r\n            setpostData(item);\r\n        \r\n        CRUD.getAllCategories().then((res) => {\r\n            setCategories(res.data.data);\r\n            setLoading(false)\r\n        }).catch((err) => {\r\n            setLoading(false)\r\n            alert(err.response.data.message || \"Unknown Message\");\r\n        });\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n            CRUD.create(postData).then((res) => {\r\n                // alert(res.data.message);\r\n                //window.location.reload();\r\n                const check = res.data.message === \"Insert successfully\";\r\n                onSubmitSuccess(check);\r\n            }).catch((err) => {\r\n                alert(err.response.data.message || \"Unknown Message\");\r\n            });\r\n\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        {!loading ? (\r\n            <form onSubmit={handleOnSubmit}>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"ProductName\" value={postData.ProductName} onChange={handleChangeData} placeholder=\"ProductName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"SupplierID\" value={postData.SupplierID} onChange={handleChangeData} placeholder=\"SupplierID\"></input>\r\n            <select style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"CategoryID\" onChange={handleChangeData} placeholder=\"CategoryID\" value={postData.CategoryID}>\r\n                {\r\n                    categories.map((ct) => (\r\n                        <option key={ct.CategoryID} value={ct.CategoryID}>{ct.CategoryID}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"Unit\" value={postData.Unit} onChange={handleChangeData} placeholder=\"Unit\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"Price\" value={postData.Price} onChange={handleChangeData} placeholder=\"Price\"></input>\r\n            <button style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"25%\", backgroundColor: \"rgb(230, 120, 116)\"}} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n        </form>\r\n        ): <div>Loading ...</div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\productUpdate\\index.js",["227"],"E:\\web\\FontEnd\\todo-example\\src\\customer\\tableCustomer.js",["228","229"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableCustomer({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem , onSubmitSuccess, RetrieveAllCustomers}) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOneCustomer(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/customer/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                    <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border:\"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>CustomerID</td>\r\n                        <td>CustomerName</td>\r\n                        <td>ContactName</td>\r\n                        <td>Address</td>\r\n                        <td>City</td>\r\n                        <td>PostalCode</td>\r\n                        <td>Country</td>\r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items && items.map((item, index) => {\r\n                        console.log(item) \r\n                        return ((\r\n                            <tr key={index}> \r\n                                <td>{item.customer_id}</td>\r\n                                <td>{item.customer_name}</td>\r\n                                <td>{item.contact_name}</td>\r\n                                <td>{item.address}</td>\r\n                                <td>{item.city}</td>\r\n                                <td>{item.postal_code}</td>\r\n                                <td>{item.country}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.customer_id)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.customer_id)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n                            </tr>\r\n    \r\n                        ))\r\n                    })}\r\n                    \r\n          \r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} RetrieveAllCustomers={RetrieveAllCustomers}/>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableCustomer;\r\n","E:\\web\\FontEnd\\todo-example\\src\\categories\\index.js",["230","231"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableCustomer from \"./tableCategories\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listCategories, setlistCategories] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n\r\n    const RetrieveAllCategories = () => {\r\n        CRUD.getAllCategories().then(res => {\r\n            setlistCategories(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        RetrieveAllCategories();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <TableCustomer items={listCategories} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem} RetrieveAllCategories={RetrieveAllCategories}/>\r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess} /> */}\r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess}  item={currentItem > -1 ? listCustomer[currentItem] : null}/> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\categories\\FormInput.js",["232"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item, RetrieveAllCategories }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    let history = useHistory();\r\n    const [postData, setpostData] = React.useState({\r\n        CategoryID: \"\",\r\n        CategoryName: \"\",\r\n        Description: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (item)\r\n            setpostData(item);\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n            CRUD.createCategories(postData).then((res) => {\r\n                RetrieveAllCategories();\r\n                const check = res.data.message === \"Insert successfully\";\r\n                onSubmitSuccess(check);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                alert(err.response.data.message || \"Unknown Message\");\r\n            });\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"30%\"}} type=\"text\" name=\"CategoryName\" value={postData.CategoryName} onChange={handleChangeData} placeholder=\"CategoryName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"30%\"}} type=\"text\" name=\"Description\" value={postData.Description} onChange={handleChangeData} placeholder=\"Description\"></input>\r\n            <button style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"40%\", backgroundColor: \"rgb(230, 120, 116)\"}} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\categories\\tableCategories.js",["233","234"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableCategories({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem, onSubmitSuccess, RetrieveAllCategories }) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOneCategories(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/categories/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                    <div className=\"logo\">\r\n\r\n                    </div>\r\n                    <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border: \"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>CategoryID</td>\r\n                        <td>CategoryName</td>\r\n                        <td>Description</td>\r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items && items.map((item, index) => {\r\n                        console.log(item)\r\n                        return ((\r\n                            <tr key={index}>\r\n                                <td>{item.CategoryID}</td>\r\n                                <td>{item.CategoryName}</td>\r\n                                <td>{item.Description}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.CategoryID)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.CategoryID)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n                            </tr>\r\n\r\n                        ))\r\n                    })}\r\n\r\n\r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} RetrieveAllCategories={RetrieveAllCategories} />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableCategories;\r\n","E:\\web\\FontEnd\\todo-example\\src\\customerUpdate\\index.js",["235"],"E:\\web\\FontEnd\\todo-example\\src\\categoriesUpdate\\index.js",["236"],"E:\\web\\FontEnd\\todo-example\\src\\employeesUpdate\\index.js",["237"],"E:\\web\\FontEnd\\todo-example\\src\\employees\\index.js",["238","239"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableEmployees from \"./tableEmployees\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listEmployees, setlistEmployees] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n    \r\n    const RetrieveAllEmployees = () => {\r\n        CRUD.getAllEmployees().then(res => {\r\n            setlistEmployees(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        RetrieveAllEmployees();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n         <TableEmployees items={listEmployees} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem} RetrieveAllEmployees={RetrieveAllEmployees}/>\r\n        \r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\employees\\FormInput.js",["240"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item, RetrieveAllEmployees }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    let history = useHistory();\r\n    const [postData, setpostData] = React.useState({\r\n        EmployeeID:\"\",\r\n        LastName:\"\",\r\n        FirstName:\"\",\r\n        BirthDate:\"\",\r\n        Photo:\"\",\r\n        Notes:\"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (item)\r\n            setpostData(item);\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n            CRUD.createEmployees(postData).then((res) => {\r\n                RetrieveAllEmployees();\r\n                const check = res.data.message === \"Insert successfully\";\r\n                onSubmitSuccess(check);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                alert(err.response.data.message || \"Unknown Message\");\r\n            });\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"LastName\" value={postData.LastName} onChange={handleChangeData} placeholder=\"LastName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"FirstName\" value={postData.FirstName} onChange={handleChangeData} placeholder=\"FirstName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"BirthDate\" value={postData.BirthDate} onChange={handleChangeData} placeholder=\"BirthDate\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"Photo\" value={postData.Photo} onChange={handleChangeData} placeholder=\"Photo\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"15%\"}} type=\"text\" name=\"Notes\" value={postData.Notes} onChange={handleChangeData} placeholder=\"Notes\"></input>\r\n            {/* <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"13%\"}} type=\"text\" name=\"Description\" value={postData.Description} onChange={handleChangeData} placeholder=\"Description\"></input> */}\r\n            <button style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"25%\", backgroundColor: \"rgb(230, 120, 116)\"}} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\employees\\tableEmployees.js",["241","242"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableEmployees({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem , onSubmitSuccess, RetrieveAllEmployees}) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOneEmployees(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/employees/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    \r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                    <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border:\"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>EmployeeID</td>\r\n                        <td>LastName</td>\r\n                        <td>FirstName</td>\r\n                        <td>BirthDate</td>\r\n                        <td>Photo</td>\r\n                        <td>Notes</td>\r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items && items.map((item, index) => {\r\n                        console.log(item) \r\n                        return ((\r\n                            <tr key={index}> \r\n                                <td>{item.EmployeeID}</td>\r\n                                <td>{item.LastName}</td>\r\n                                <td>{item.FirstName}</td>\r\n                                <td>{item.BirthDate}</td>\r\n                                <td>{item.Photo}</td>\r\n                                <td>{item.Notes}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.EmployeeID)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.EmployeeID)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n                            </tr>\r\n    \r\n                        ))\r\n                    })}\r\n                    \r\n          \r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} RetrieveAllEmployees={RetrieveAllEmployees}/>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableEmployees;\r\n","E:\\web\\FontEnd\\todo-example\\src\\orderDetailUpdate\\index.js",["243"],"E:\\web\\FontEnd\\todo-example\\src\\orderDetail\\index.js",["244","245"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableOrderDetail from \"./tableOrderDetail\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listOrderDetail, setlistOrderDetail] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n    const RetrieveAllOrderDetail = () => {\r\n        CRUD.getAllOrderDetail().then(res => {\r\n            setlistOrderDetail(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n       \r\n        RetrieveAllOrderDetail();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       <TableOrderDetail items={listOrderDetail} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem} RetrieveAllOrderDetail={RetrieveAllOrderDetail}/>\r\n        \r\n            \r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess} /> */}\r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess}  item={currentItem > -1 ? listCustomer[currentItem] : null}/> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\orderDetail\\tableOrderDetail.js",["246","247"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableOrderDetail({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem , onSubmitSuccess, RetrieveAllOrderDetail}) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOneOrderDetail(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/orderDetail/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                    <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border:\"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>OrderDetailID</td>\r\n                        <td>OrderID</td>\r\n                        <td>ProductID</td>\r\n                        <td>Quantity</td>\r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items && items.map((item, index) => {\r\n                        console.log(item) \r\n                        return ((\r\n                            <tr key={index}> \r\n                                <td>{item.OrderDetailID}</td>\r\n                                <td>{item.OrderID}</td>\r\n                                <td>{item.ProductID}</td>\r\n                                <td>{item.Quantity}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.OrderDetailID)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.OrderDetailID)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n                            </tr>\r\n    \r\n                        ))\r\n                    })}\r\n                    \r\n          \r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} RetrieveAllOrderDetail={RetrieveAllOrderDetail}/>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableOrderDetail;\r\n","E:\\web\\FontEnd\\todo-example\\src\\orderDetail\\FormInput.js",["248"],"import React, { useEffect, useState } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item, RetrieveAllOrderDetail }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    let history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [order, setOrder] = useState(null);\r\n    const [product, setProduct] = useState(null);\r\n    const [postData, setpostData] = React.useState({\r\n        OrderDetailID: \"\",\r\n        OrderID: \"\",\r\n        ProductID: \"\",\r\n        Quantity: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        if (item)\r\n            setpostData(item);\r\n        CRUD.getAllOrder().then((res) => {\r\n            setOrder(res.data.data);\r\n        }).catch((err) => {\r\n            alert(err.response?.data.message || \"Unknown Message\");\r\n            console.log(err);\r\n        });\r\n        CRUD.getAll().then((res) => {\r\n            setProduct(res.data.data);\r\n            setLoading(false)\r\n        }).catch((err) => {\r\n            setLoading(false)\r\n            alert(err.response.data.message || \"Unknown Message\");\r\n        });\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n        CRUD.createOrderDetail(postData).then((res) => {\r\n            RetrieveAllOrderDetail();\r\n            const check = res.data.message === \"Insert successfully\";\r\n            onSubmitSuccess(check);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            alert(err.response.data.message || \"Unknown Message\");\r\n        });\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {!loading ? (<form onSubmit={handleOnSubmit}>\r\n            <select style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"22%\" }} type=\"text\" name=\"OrderID\" value={postData.OrderID} onChange={handleChangeData} placeholder=\"OrderID\">\r\n                {\r\n                    order.map((od) => (\r\n                        <option key={od.OrderID} value={od.OrderID}>{od.OrderID}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <select style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"22%\" }} type=\"text\" name=\"ProductID\" value={postData.ProductID} onChange={handleChangeData} placeholder=\"ProductID\">\r\n                {\r\n                    product.map((pr) => (\r\n                        <option key={pr.ProductID} value={pr.ProductID}>{pr.ProductID}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <input style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"22%\" }} type=\"text\" name=\"Quantity\" value={postData.Quantity} onChange={handleChangeData} placeholder=\"Quantity\"></input>\r\n            <button style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"34%\", backgroundColor: \"rgb(230, 120, 116)\" }} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n        </form>) : <div>Loading ...</div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\order\\index.js",["249","250"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableOrder from \"./tableOrder\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listOrder, setlistOrder] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n   \r\n    const RetrieveAllOrder = () => {\r\n        CRUD.getAllOrder().then(res => {\r\n            setlistOrder(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        RetrieveAllOrder();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <TableOrder items={listOrder} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem} RetrieveAllOrder={RetrieveAllOrder}/>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\order\\FormInput.js",["251"],"import React, { useEffect, useState } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item, RetrieveAllOrder }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [customer, setcustomer] = useState(null);\r\n    const [employees, setemployees] = useState(null);\r\n    const [shipper, setshipper] = useState(null);\r\n    const [postData, setpostData] = React.useState({\r\n        OrderID: \"\",\r\n        CustomerID: \"\",\r\n        EmployeeID: \"\",\r\n        OrderDate: \"\",\r\n        ShipperID: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (item)\r\n            setpostData(item);\r\n        CRUD.getAllCustomer().then((res) => {\r\n            setcustomer(res.data.data);\r\n        }).catch((err) => {\r\n            alert(err.response?.data.message || \"Unknown Message\");\r\n            console.log(err);\r\n        });\r\n        CRUD.getAllEmployees().then((res) => {\r\n            setemployees(res.data.data);\r\n        }).catch((err) => {\r\n            alert(err.response?.data.message || \"Unknown Message\");\r\n            console.log(err);\r\n        });\r\n        CRUD.getAllShipper().then((res) => {\r\n\r\n            setshipper(res.data.data);\r\n            setLoading(false)\r\n        }).catch((err) => {\r\n            setLoading(false)\r\n            alert(err.response?.data.message || \"Unknown Message\");\r\n            console.log(err);\r\n        });\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n        CRUD.createOrder(postData).then((res) => {\r\n            RetrieveAllOrder();\r\n            const check = res.data.message === \"Insert successfully\";\r\n            onSubmitSuccess(check);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            alert(err.response.data.message || \"Unknown Message\");\r\n        });\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!loading ? (<form onSubmit={handleOnSubmit}>\r\n                <select style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"17%\" }} type=\"text\" name=\"CustomerID\" value={postData.CustomerID} onChange={handleChangeData} placeholder=\"CustomerID\">\r\n                    {\r\n                        customer.map((cus) => (\r\n                            <option key={cus.customer_id} value={cus.customer_id}>{cus.customer_id}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <select style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"17%\" }} type=\"text\" name=\"EmployeeID\" value={postData.EmployeeID} onChange={handleChangeData} placeholder=\"EmployeeID\">\r\n                    {\r\n                        employees.map((em) => (\r\n                            <option key={em.EmployeeID} value={em.EmployeeID}>{em.EmployeeID}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <input style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"17%\" }} type=\"text\" name=\"OrderDate\" value={postData.OrderDate} onChange={handleChangeData} placeholder=\"OrderDate\"></input>\r\n                <select style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"17%\" }} type=\"text\" name=\"ShipperID\" value={postData.ShipperID} onChange={handleChangeData} placeholder=\"ShipperID\">\r\n                    {\r\n                        shipper.map((ship) => (\r\n                            <option key={ship.ShipperID} value={ship.ShipperID}>{ship.ShipperID}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <button style={{ height: \"50px\", borderRadius: \"5px\", textAlign: \"center\", width: \"32%\", backgroundColor: \"rgb(230, 120, 116)\" }} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n            </form>) : <div>Loading ...</div>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\orderUpdate\\index.js",["252"],"E:\\web\\FontEnd\\todo-example\\src\\order\\tableOrder.js",["253","254"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableOrder({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem , onSubmitSuccess, RetrieveAllOrder}) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOneOrder(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/order/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                    <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border:\"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>OrderID</td>\r\n                        <td>CustomerID</td>\r\n                        <td>EmployeeID</td>\r\n                        <td>OrderDate</td>\r\n                        <td>ShipperID</td>\r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items && items.map((item, index) => {\r\n                        console.log(item) \r\n                        return ((\r\n                            <tr key={index}> \r\n                                <td>{item.OrderID}</td>\r\n                                <td>{item.CustomerID}</td>\r\n                                <td>{item.EmployeeID}</td>\r\n                                <td>{item.OrderDate}</td>\r\n                                <td>{item.ShipperID}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.OrderID)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.OrderID)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n                            </tr>\r\n    \r\n                        ))\r\n                    })}\r\n                    \r\n          \r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} RetrieveAllOrder={RetrieveAllOrder}/>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableOrder;\r\n","E:\\web\\FontEnd\\todo-example\\src\\shipperUpdate\\index.js",["255"],"E:\\web\\FontEnd\\todo-example\\src\\shipper\\index.js",["256","257"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableShipper from \"./tableShipper\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listShipper, setlistShipper] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n   \r\n    const RetrieveAllShipper = () => {\r\n        CRUD.getAllShipper().then(res => {\r\n            setlistShipper(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        RetrieveAllShipper();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <TableShipper items={listShipper} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem} RetrieveAllShipper={RetrieveAllShipper}/>\r\n        \r\n            \r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess} /> */}\r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess}  item={currentItem > -1 ? listCustomer[currentItem] : null}/> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\shipper\\tableShipper.js",["258","259"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableShipper({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem , onSubmitSuccess, RetrieveAllShipper}) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOneShipper(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/shipper/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                    <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border:\"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>ShipperID</td>\r\n                        <td>ShipperName</td>\r\n                        <td>Phone</td>\r\n                    \r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items && items.map((item, index) => {\r\n                        console.log(item) \r\n                        return ((\r\n                            <tr key={index}> \r\n                                <td>{item.ShipperID}</td>\r\n                                <td>{item.ShipperName}</td>\r\n                                <td>{item.Phone}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.ShipperID)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.ShipperID)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n                            </tr>\r\n    \r\n                        ))\r\n                    })}\r\n                    \r\n          \r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} RetrieveAllShipper={RetrieveAllShipper}/>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableShipper;\r\n","E:\\web\\FontEnd\\todo-example\\src\\shipper\\FormInput.js",["260"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item, RetrieveAllShipper }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    let history = useHistory();\r\n    const [postData, setpostData] = React.useState({\r\n        ShipperID:\"\",\r\n        ShipperName:\"\",\r\n        Phone:\"\",\r\n       \r\n    })\r\n\r\n    useEffect(() => {\r\n        if (item)\r\n            setpostData(item);\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n            CRUD.createShipper(postData).then((res) => {\r\n                RetrieveAllShipper();\r\n                const check = res.data.message === \"Insert successfully\";\r\n                onSubmitSuccess(check);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                alert(err.response.data.message || \"Unknown Message\");\r\n            });\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"33%\"}} type=\"text\" name=\"ShipperName\" value={postData.ShipperName} onChange={handleChangeData} placeholder=\"ShipperName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"33%\"}} type=\"text\" name=\"Phone\" value={postData.Phone} onChange={handleChangeData} placeholder=\"Phone\"></input>\r\n            <button style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"34%\", backgroundColor: \"rgb(230, 120, 116)\"}} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\supplierUpdate\\index.js",["261"],"E:\\web\\FontEnd\\todo-example\\src\\supplier\\index.js",["262","263"],"import CRUD from \"../sevices/crud\";\r\nimport React from \"react\";\r\nimport TableSupplier from \"./tableSupplier\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction Home() {\r\n\r\n    const [listSupplier, setlistSupplier] = React.useState([]);\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    const [currentItem, setCurrentItem] = React.useState(-1);\r\n\r\n    const RetrieveAllSupplier = () => {\r\n        CRUD.getAllSupplier().then(res => {\r\n            setlistSupplier(res.data.data);\r\n            setCheckUpdate(false);\r\n        })\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        RetrieveAllSupplier();\r\n        // setRes(resVal);\r\n    }, [checkupdate]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       <TableSupplier items={listSupplier} onDeleteSuccess={onUpdateSucess} setCurrentItem={setCurrentItem} RetrieveAllSupplier={RetrieveAllSupplier}/>\r\n        \r\n            \r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess} /> */}\r\n            {/* <FormInput onSubmitSuccess={onUpdateSucess}  item={currentItem > -1 ? listCustomer[currentItem] : null}/> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","E:\\web\\FontEnd\\todo-example\\src\\supplier\\FormInput.js",["264"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction FormInput({ onSubmitSuccess, item, RetrieveAllSupplier }) {\r\n    // onSubmitSuccess <=> onUpdateSuccess\r\n    let history = useHistory();\r\n    const [postData, setpostData] = React.useState({\r\n        SupplierID:\"\",\r\n        SupplierName:\"\",\r\n        ContactName:\"\",\r\n        Address:\"\",\r\n        City:\"\",\r\n        PostalCode:\"\",\r\n        Country:\"\",\r\n        Phone:\"\",\r\n       \r\n    })\r\n\r\n    useEffect(() => {\r\n        if (item)\r\n            setpostData(item);\r\n    }, [item])\r\n\r\n    function handleChangeData(e) {\r\n\r\n        setpostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleOnclickSubmit(e) {\r\n            CRUD.createSupplier(postData).then((res) => {\r\n                RetrieveAllSupplier();\r\n                const check = res.data.message === \"Insert successfully\";\r\n                onSubmitSuccess(check);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                alert(err.response.data.message || \"Unknown Message\");\r\n            });\r\n        // }\r\n\r\n        console.log(\"Data : \" + JSON.stringify(postData));\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"11%\"}} type=\"text\" name=\"SupplierName\" value={postData.SupplierName} onChange={handleChangeData} placeholder=\"SupplierName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"11%\"}} type=\"text\" name=\"ContactName\" value={postData.ContactName} onChange={handleChangeData} placeholder=\"ContactName\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"11%\"}} type=\"text\" name=\"Address\" value={postData.Address} onChange={handleChangeData} placeholder=\"Address\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"11%\"}} type=\"text\" name=\"City\" value={postData.City} onChange={handleChangeData} placeholder=\"City\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"11%\"}} type=\"text\" name=\"PostalCode\" value={postData.PostalCode} onChange={handleChangeData} placeholder=\"PostalCode\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"11%\"}} type=\"text\" name=\"Country\" value={postData.Country} onChange={handleChangeData} placeholder=\"Country\"></input>\r\n            <input style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"11%\"}} type=\"text\" name=\"Phone\" value={postData.Phone} onChange={handleChangeData} placeholder=\"Phone\"></input>\r\n            <button style={{height:\"50px\", borderRadius:\"5px\", textAlign: \"center\", width: \"23%\", backgroundColor: \"rgb(230, 120, 116)\"}} name=\"btnSubmit\" onClick={handleOnclickSubmit}>Thêm</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormInput;","E:\\web\\FontEnd\\todo-example\\src\\supplier\\tableSupplier.js",["265","266"],"import React from \"react\";\r\nimport CRUD from \"../sevices/crud\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nfunction TableSupplier({ items, checkUpdateSuccess, onDeleteSuccess, setCurrentItem, onSubmitSuccess, RetrieveAllSupplier }) {\r\n\r\n    let history = useHistory();\r\n    const [checkupdate, setCheckUpdate] = React.useState(false);\r\n    function handleOnDelete(id) {\r\n        CRUD.deleteOneSupplier(id).then((res) => {\r\n            const checkDele = res.data.message === \"Deleted successfully\";\r\n            onDeleteSuccess(checkDele);\r\n        });\r\n    }\r\n\r\n    const onUpdateSucess = (status) => {\r\n        setCheckUpdate(status);\r\n    }\r\n\r\n    function handleOnUpdate(id) {\r\n        //  items[index]\r\n        //   setCurrentItem(index);\r\n        history.push(`/supplier/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                <div className=\"logo\"><Link to=\"/\">TLH</Link></div>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <label for=\"btn\" class=\"icon\">\r\n                        <span className=\"fa fa-bars\"></span>\r\n                    </label>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/customer\">Customers</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/categories\">Categories</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/employees\">Employees</Link>\r\n                        </li>\r\n                        <li><Link to=\"/orderDetail\">OrderDetails</Link>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/order\">Orders</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Product\">Products</Link>\r\n                        </li>\r\n                        <li><Link to=\"shipper\">Shippers</Link>\r\n\r\n                        </li>\r\n                        <li><Link to=\"/supplier\">Suppliers</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content\">\r\n                <table style={{ width: \"100%\", border: \"2px solid black\" }}>\r\n                    <tr>\r\n                        <td>SupplierID</td>\r\n                        <td>SupplierName</td>\r\n                        <td>ContactName</td>\r\n                        <td>Address</td>\r\n                        <td>City</td>\r\n                        <td>PostalCode</td>\r\n                        <td>Country</td>\r\n                        <td>Phone</td>\r\n                        <td style={{ columnSpan: \"2\" }}></td>\r\n                    </tr>\r\n                    {items && items.map((item, index) => {\r\n                        console.log(item)\r\n                        return ((\r\n                            <tr key={index}>\r\n                                <td>{item.SupplierID}</td>\r\n                                <td>{item.SupplierName}</td>\r\n                                <td>{item.ContactName}</td>\r\n                                <td>{item.Address}</td>\r\n                                <td>{item.City}</td>\r\n                                <td>{item.PostalCode}</td>\r\n                                <td>{item.Country}</td>\r\n                                <td>{item.Phone}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={() => handleOnDelete(item.SupplierID)}><i className=\"fas fa-trash\">Delete</i></button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={() => handleOnUpdate(item.SupplierID)}><i className=\"fas fa-tools\">Update</i></button></td>\r\n                            </tr>\r\n\r\n                        ))\r\n                    })}\r\n\r\n\r\n                </table>\r\n                <FormInput className=\"formInput\" onSubmitSuccess={onUpdateSucess} RetrieveAllSupplier={RetrieveAllSupplier} />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\nexport default TableSupplier;\r\n",{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":23},{"ruleId":"275","severity":1,"message":"276","line":176,"column":1,"nodeType":"277","endLine":184,"endColumn":7},{"ruleId":"271","severity":1,"message":"278","line":1,"column":8,"nodeType":"273","messageId":"274","endLine":1,"endColumn":12},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"281","line":10,"column":9,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"283","severity":1,"message":"284","line":50,"column":15,"nodeType":"285","endLine":50,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":53,"column":15,"nodeType":"285","endLine":53,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":56,"column":15,"nodeType":"285","endLine":56,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":58,"column":17,"nodeType":"285","endLine":58,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":62,"column":15,"nodeType":"285","endLine":62,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":65,"column":15,"nodeType":"285","endLine":65,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":67,"column":17,"nodeType":"285","endLine":67,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":70,"column":17,"nodeType":"285","endLine":70,"endColumn":29},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"283","severity":1,"message":"284","line":50,"column":15,"nodeType":"285","endLine":50,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":53,"column":15,"nodeType":"285","endLine":53,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":56,"column":15,"nodeType":"285","endLine":56,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":58,"column":17,"nodeType":"285","endLine":58,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":62,"column":15,"nodeType":"285","endLine":62,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":65,"column":15,"nodeType":"285","endLine":65,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":67,"column":17,"nodeType":"285","endLine":67,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":70,"column":17,"nodeType":"285","endLine":70,"endColumn":29},{"ruleId":"267","replacedBy":"286"},{"ruleId":"269","replacedBy":"287"},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"290","line":11,"column":12,"nodeType":"273","messageId":"274","endLine":11,"endColumn":20},{"ruleId":"271","severity":1,"message":"291","line":30,"column":14,"nodeType":"273","messageId":"274","endLine":30,"endColumn":32},{"ruleId":"271","severity":1,"message":"281","line":10,"column":9,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"281","line":10,"column":9,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"281","line":10,"column":9,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"281","line":10,"column":9,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"281","line":10,"column":11,"nodeType":"273","messageId":"274","endLine":10,"endColumn":18},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"281","line":10,"column":9,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"282","line":2,"column":22,"nodeType":"273","messageId":"274","endLine":2,"endColumn":33},{"ruleId":"271","severity":1,"message":"279","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"281","line":10,"column":9,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"288","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"271","severity":1,"message":"289","line":10,"column":12,"nodeType":"273","messageId":"274","endLine":10,"endColumn":23},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CRUD' is defined but never used.","'FormInput' is defined but never used.","'currentItem' is assigned a value but never used.","'history' is assigned a value but never used.","'useLocation' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["292"],["293"],"'useParams' is defined but never used.","'checkupdate' is assigned a value but never used.","'postData' is assigned a value but never used.","'handleOnXemHangTon' is defined but never used.","no-global-assign","no-unsafe-negation"]